reduce -v '(map (quote ((+ x0 1) x0)) (list 100 2 3 15 20))' 
x0 [(18 ((11 x0 1) x0)), (29 100 2 3 15 20)] => (quote ((+ x0 1) x0))
x1 [(18 ((11 x0 1) x0)), (29 100 2 3 15 20)] => (list 100 2 3 15 20)
(quasiquote (reduce (quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (list (unquote x0) (unquote x1)))) [(18 ((11 x0 1) x0)), (29 100 2 3 15 20)] => (reduce (quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (list (quote ((+ x0 1) x0)) (list 100 2 3 15 20)))
(quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) [] => (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))
(quote ((+ x0 1) x0)) [] => ((+ x0 1) x0)
100 [] => 100
2 [] => 2
3 [] => 3
15 [] => 15
20 [] => 20
(list 100 2 3 15 20) [] => (100 2 3 15 20)
(list (quote ((+ x0 1) x0)) (list 100 2 3 15 20)) [] => (((+ x0 1) x0) (100 2 3 15 20))
x1 [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (cons)
x2 [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (cons (reduce x0 (list (first x1))) (map x0 (rest x1)))
(list x1 x2) [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))
x0 [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (is_null x1)
(quasiquote (reduce (get (quote (unquote (list x1 x2))) (not (unquote x0))))) [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (reduce (get (quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (not (is_null x1))))
(quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) [((11 x0 1) x0), (100 2 3 15 20)] => ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))
x0 [(31 x1)] => (is_null x1)
(quasiquote (get (quote (choose1)) (unquote x0))) [(31 x1)] => (get (quote (choose1)) (is_null x1))
(quote (choose1)) [((11 x0 1) x0), (100 2 3 15 20)] => (choose1)
x1 [((11 x0 1) x0), (100 2 3 15 20)] => (100 2 3 15 20)
(is_null x1) [((11 x0 1) x0), (100 2 3 15 20)] => 0
(get (quote (choose1)) (is_null x1)) [((11 x0 1) x0), (100 2 3 15 20)] => 1
(not (is_null x1)) [((11 x0 1) x0), (100 2 3 15 20)] => 1
(get (quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (not (is_null x1))) [((11 x0 1) x0), (100 2 3 15 20)] => (cons (reduce x0 (list (first x1))) (map x0 (rest x1)))
x0 [((11 x0 1) x0), (100 2 3 15 20)] => ((+ x0 1) x0)
x1 [((11 x0 1) x0), (100 2 3 15 20)] => (100 2 3 15 20)
(first x1) [((11 x0 1) x0), (100 2 3 15 20)] => 100
(list (first x1)) [((11 x0 1) x0), (100 2 3 15 20)] => (100)
x0 [x0] => x0
1 [x0] => 1
(+ x0 1) [x0] => (+ x0 1)
x0 [100] => 100
1 [100] => 1
(+ x0 1) [100] => 101
((+ x0 1) x0) [100] => 101
(reduce x0 (list (first x1))) [((11 x0 1) x0), (100 2 3 15 20)] => 101
x0 [x0, (28 x1)] => x0
x1 [x0, (28 x1)] => (rest x1)
(quasiquote (reduce (quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (list (unquote x0) (unquote x1)))) [x0, (28 x1)] => (reduce (quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (list x0 (rest x1)))
(quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) [((11 x0 1) x0), (100 2 3 15 20)] => (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))
x0 [((11 x0 1) x0), (100 2 3 15 20)] => ((+ x0 1) x0)
x1 [((11 x0 1) x0), (100 2 3 15 20)] => (100 2 3 15 20)
(rest x1) [((11 x0 1) x0), (100 2 3 15 20)] => (aggsig 3 15 20)
(list x0 (rest x1)) [((11 x0 1) x0), (100 2 3 15 20)] => (((+ x0 1) x0) (aggsig 3 15 20))
x1 [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (cons)
x2 [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (cons (reduce x0 (list (first x1))) (map x0 (rest x1)))
(list x1 x2) [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))
x0 [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (is_null x1)
(quasiquote (reduce (get (quote (unquote (list x1 x2))) (not (unquote x0))))) [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (reduce (get (quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (not (is_null x1))))
(quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) [((11 x0 1) x0), (2 3 15 20)] => ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))
x0 [(31 x1)] => (is_null x1)
(quasiquote (get (quote (choose1)) (unquote x0))) [(31 x1)] => (get (quote (choose1)) (is_null x1))
(quote (choose1)) [((11 x0 1) x0), (2 3 15 20)] => (choose1)
x1 [((11 x0 1) x0), (2 3 15 20)] => (aggsig 3 15 20)
(is_null x1) [((11 x0 1) x0), (2 3 15 20)] => 0
(get (quote (choose1)) (is_null x1)) [((11 x0 1) x0), (2 3 15 20)] => 1
(not (is_null x1)) [((11 x0 1) x0), (2 3 15 20)] => 1
(get (quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (not (is_null x1))) [((11 x0 1) x0), (2 3 15 20)] => (cons (reduce x0 (list (first x1))) (map x0 (rest x1)))
x0 [((11 x0 1) x0), (2 3 15 20)] => ((+ x0 1) x0)
x1 [((11 x0 1) x0), (2 3 15 20)] => (aggsig 3 15 20)
(first x1) [((11 x0 1) x0), (2 3 15 20)] => 2
(list (first x1)) [((11 x0 1) x0), (2 3 15 20)] => (aggsig)
x0 [x0] => x0
1 [x0] => 1
(+ x0 1) [x0] => (+ x0 1)
x0 [2] => 2
1 [2] => 1
(+ x0 1) [2] => 3
((+ x0 1) x0) [2] => 3
(reduce x0 (list (first x1))) [((11 x0 1) x0), (2 3 15 20)] => 3
x0 [x0, (28 x1)] => x0
x1 [x0, (28 x1)] => (rest x1)
(quasiquote (reduce (quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (list (unquote x0) (unquote x1)))) [x0, (28 x1)] => (reduce (quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (list x0 (rest x1)))
(quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) [((11 x0 1) x0), (2 3 15 20)] => (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))
x0 [((11 x0 1) x0), (2 3 15 20)] => ((+ x0 1) x0)
x1 [((11 x0 1) x0), (2 3 15 20)] => (aggsig 3 15 20)
(rest x1) [((11 x0 1) x0), (2 3 15 20)] => (point_add 15 20)
(list x0 (rest x1)) [((11 x0 1) x0), (2 3 15 20)] => (((+ x0 1) x0) (point_add 15 20))
x1 [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (cons)
x2 [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (cons (reduce x0 (list (first x1))) (map x0 (rest x1)))
(list x1 x2) [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))
x0 [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (is_null x1)
(quasiquote (reduce (get (quote (unquote (list x1 x2))) (not (unquote x0))))) [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (reduce (get (quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (not (is_null x1))))
(quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) [((11 x0 1) x0), (3 15 20)] => ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))
x0 [(31 x1)] => (is_null x1)
(quasiquote (get (quote (choose1)) (unquote x0))) [(31 x1)] => (get (quote (choose1)) (is_null x1))
(quote (choose1)) [((11 x0 1) x0), (3 15 20)] => (choose1)
x1 [((11 x0 1) x0), (3 15 20)] => (point_add 15 20)
(is_null x1) [((11 x0 1) x0), (3 15 20)] => 0
(get (quote (choose1)) (is_null x1)) [((11 x0 1) x0), (3 15 20)] => 1
(not (is_null x1)) [((11 x0 1) x0), (3 15 20)] => 1
(get (quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (not (is_null x1))) [((11 x0 1) x0), (3 15 20)] => (cons (reduce x0 (list (first x1))) (map x0 (rest x1)))
x0 [((11 x0 1) x0), (3 15 20)] => ((+ x0 1) x0)
x1 [((11 x0 1) x0), (3 15 20)] => (point_add 15 20)
(first x1) [((11 x0 1) x0), (3 15 20)] => 3
(list (first x1)) [((11 x0 1) x0), (3 15 20)] => (point_add)
x0 [x0] => x0
1 [x0] => 1
(+ x0 1) [x0] => (+ x0 1)
x0 [3] => 3
1 [3] => 1
(+ x0 1) [3] => 4
((+ x0 1) x0) [3] => 4
(reduce x0 (list (first x1))) [((11 x0 1) x0), (3 15 20)] => 4
x0 [x0, (28 x1)] => x0
x1 [x0, (28 x1)] => (rest x1)
(quasiquote (reduce (quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (list (unquote x0) (unquote x1)))) [x0, (28 x1)] => (reduce (quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (list x0 (rest x1)))
(quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) [((11 x0 1) x0), (3 15 20)] => (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))
x0 [((11 x0 1) x0), (3 15 20)] => ((+ x0 1) x0)
x1 [((11 x0 1) x0), (3 15 20)] => (point_add 15 20)
(rest x1) [((11 x0 1) x0), (3 15 20)] => (wrap 20)
(list x0 (rest x1)) [((11 x0 1) x0), (3 15 20)] => (((+ x0 1) x0) (wrap 20))
x1 [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (cons)
x2 [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (cons (reduce x0 (list (first x1))) (map x0 (rest x1)))
(list x1 x2) [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))
x0 [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (is_null x1)
(quasiquote (reduce (get (quote (unquote (list x1 x2))) (not (unquote x0))))) [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (reduce (get (quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (not (is_null x1))))
(quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) [((11 x0 1) x0), (15 20)] => ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))
x0 [(31 x1)] => (is_null x1)
(quasiquote (get (quote (choose1)) (unquote x0))) [(31 x1)] => (get (quote (choose1)) (is_null x1))
(quote (choose1)) [((11 x0 1) x0), (15 20)] => (choose1)
x1 [((11 x0 1) x0), (15 20)] => (wrap 20)
(is_null x1) [((11 x0 1) x0), (15 20)] => 0
(get (quote (choose1)) (is_null x1)) [((11 x0 1) x0), (15 20)] => 1
(not (is_null x1)) [((11 x0 1) x0), (15 20)] => 1
(get (quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (not (is_null x1))) [((11 x0 1) x0), (15 20)] => (cons (reduce x0 (list (first x1))) (map x0 (rest x1)))
x0 [((11 x0 1) x0), (15 20)] => ((+ x0 1) x0)
x1 [((11 x0 1) x0), (15 20)] => (wrap 20)
(first x1) [((11 x0 1) x0), (15 20)] => 15
(list (first x1)) [((11 x0 1) x0), (15 20)] => (wrap)
x0 [x0] => x0
1 [x0] => 1
(+ x0 1) [x0] => (+ x0 1)
x0 [15] => 15
1 [15] => 1
(+ x0 1) [15] => 16
((+ x0 1) x0) [15] => 16
(reduce x0 (list (first x1))) [((11 x0 1) x0), (15 20)] => 16
x0 [x0, (28 x1)] => x0
x1 [x0, (28 x1)] => (rest x1)
(quasiquote (reduce (quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (list (unquote x0) (unquote x1)))) [x0, (28 x1)] => (reduce (quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (list x0 (rest x1)))
(quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) [((11 x0 1) x0), (15 20)] => (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))
x0 [((11 x0 1) x0), (15 20)] => ((+ x0 1) x0)
x1 [((11 x0 1) x0), (15 20)] => (wrap 20)
(rest x1) [((11 x0 1) x0), (15 20)] => (unquote)
(list x0 (rest x1)) [((11 x0 1) x0), (15 20)] => (((+ x0 1) x0) (unquote))
x1 [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (cons)
x2 [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (cons (reduce x0 (list (first x1))) (map x0 (rest x1)))
(list x1 x2) [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))
x0 [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (is_null x1)
(quasiquote (reduce (get (quote (unquote (list x1 x2))) (not (unquote x0))))) [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (reduce (get (quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (not (is_null x1))))
(quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) [((11 x0 1) x0), (20)] => ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))
x0 [(31 x1)] => (is_null x1)
(quasiquote (get (quote (choose1)) (unquote x0))) [(31 x1)] => (get (quote (choose1)) (is_null x1))
(quote (choose1)) [((11 x0 1) x0), (20)] => (choose1)
x1 [((11 x0 1) x0), (20)] => (unquote)
(is_null x1) [((11 x0 1) x0), (20)] => 0
(get (quote (choose1)) (is_null x1)) [((11 x0 1) x0), (20)] => 1
(not (is_null x1)) [((11 x0 1) x0), (20)] => 1
(get (quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (not (is_null x1))) [((11 x0 1) x0), (20)] => (cons (reduce x0 (list (first x1))) (map x0 (rest x1)))
x0 [((11 x0 1) x0), (20)] => ((+ x0 1) x0)
x1 [((11 x0 1) x0), (20)] => (unquote)
(first x1) [((11 x0 1) x0), (20)] => 20
(list (first x1)) [((11 x0 1) x0), (20)] => (unquote)
x0 [x0] => x0
1 [x0] => 1
(+ x0 1) [x0] => (+ x0 1)
x0 [20] => 20
1 [20] => 1
(+ x0 1) [20] => 21
((+ x0 1) x0) [20] => 21
(reduce x0 (list (first x1))) [((11 x0 1) x0), (20)] => 21
x0 [x0, (28 x1)] => x0
x1 [x0, (28 x1)] => (rest x1)
(quasiquote (reduce (quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (list (unquote x0) (unquote x1)))) [x0, (28 x1)] => (reduce (quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (list x0 (rest x1)))
(quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) [((11 x0 1) x0), (20)] => (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))
x0 [((11 x0 1) x0), (20)] => ((+ x0 1) x0)
x1 [((11 x0 1) x0), (20)] => (unquote)
(rest x1) [((11 x0 1) x0), (20)] => ()
(list x0 (rest x1)) [((11 x0 1) x0), (20)] => (((+ x0 1) x0) ())
x1 [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (cons)
x2 [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (cons (reduce x0 (list (first x1))) (map x0 (rest x1)))
(list x1 x2) [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))
x0 [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (is_null x1)
(quasiquote (reduce (get (quote (unquote (list x1 x2))) (not (unquote x0))))) [(31 x1), (26), (26 (10 x0 (29 (27 x1))) (43 x0 (28 x1)))] => (reduce (get (quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (not (is_null x1))))
(quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) [((11 x0 1) x0), ()] => ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))
x0 [(31 x1)] => (is_null x1)
(quasiquote (get (quote (choose1)) (unquote x0))) [(31 x1)] => (get (quote (choose1)) (is_null x1))
(quote (choose1)) [((11 x0 1) x0), ()] => (choose1)
x1 [((11 x0 1) x0), ()] => ()
(is_null x1) [((11 x0 1) x0), ()] => 1
(get (quote (choose1)) (is_null x1)) [((11 x0 1) x0), ()] => 0
(not (is_null x1)) [((11 x0 1) x0), ()] => 0
(get (quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (not (is_null x1))) [((11 x0 1) x0), ()] => (cons)
(cons) [((11 x0 1) x0), ()] => ()
(reduce (get (quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (not (is_null x1)))) [((11 x0 1) x0), ()] => ()
(if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1)))) [((11 x0 1) x0), ()] => ()
(reduce (quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (list x0 (rest x1))) [((11 x0 1) x0), (20)] => ()
(map x0 (rest x1)) [((11 x0 1) x0), (20)] => ()
(cons (reduce x0 (list (first x1))) (map x0 (rest x1))) [((11 x0 1) x0), (20)] => (get)
(reduce (get (quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (not (is_null x1)))) [((11 x0 1) x0), (20)] => (get)
(if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1)))) [((11 x0 1) x0), (20)] => (get)
(reduce (quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (list x0 (rest x1))) [((11 x0 1) x0), (15 20)] => (get)
(map x0 (rest x1)) [((11 x0 1) x0), (15 20)] => (get)
(cons (reduce x0 (list (first x1))) (map x0 (rest x1))) [((11 x0 1) x0), (15 20)] => (unwrap 21)
(reduce (get (quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (not (is_null x1)))) [((11 x0 1) x0), (15 20)] => (unwrap 21)
(if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1)))) [((11 x0 1) x0), (15 20)] => (unwrap 21)
(reduce (quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (list x0 (rest x1))) [((11 x0 1) x0), (3 15 20)] => (unwrap 21)
(map x0 (rest x1)) [((11 x0 1) x0), (3 15 20)] => (unwrap 21)
(cons (reduce x0 (list (first x1))) (map x0 (rest x1))) [((11 x0 1) x0), (3 15 20)] => (assert_output 16 21)
(reduce (get (quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (not (is_null x1)))) [((11 x0 1) x0), (3 15 20)] => (assert_output 16 21)
(if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1)))) [((11 x0 1) x0), (3 15 20)] => (assert_output 16 21)
(reduce (quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (list x0 (rest x1))) [((11 x0 1) x0), (2 3 15 20)] => (assert_output 16 21)
(map x0 (rest x1)) [((11 x0 1) x0), (2 3 15 20)] => (assert_output 16 21)
(cons (reduce x0 (list (first x1))) (map x0 (rest x1))) [((11 x0 1) x0), (2 3 15 20)] => (point_add 4 16 21)
(reduce (get (quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (not (is_null x1)))) [((11 x0 1) x0), (2 3 15 20)] => (point_add 4 16 21)
(if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1)))) [((11 x0 1) x0), (2 3 15 20)] => (point_add 4 16 21)
(reduce (quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (list x0 (rest x1))) [((11 x0 1) x0), (100 2 3 15 20)] => (point_add 4 16 21)
(map x0 (rest x1)) [((11 x0 1) x0), (100 2 3 15 20)] => (point_add 4 16 21)
(cons (reduce x0 (list (first x1))) (map x0 (rest x1))) [((11 x0 1) x0), (100 2 3 15 20)] => (101 3 4 16 21)
(reduce (get (quote ((cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (not (is_null x1)))) [((11 x0 1) x0), (100 2 3 15 20)] => (101 3 4 16 21)
(if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1)))) [((11 x0 1) x0), (100 2 3 15 20)] => (101 3 4 16 21)
(reduce (quote (if (is_null x1) (cons) (cons (reduce x0 (list (first x1))) (map x0 (rest x1))))) (list (quote ((+ x0 1) x0)) (list 100 2 3 15 20))) [] => (101 3 4 16 21)
(map (quote ((+ x0 1) x0)) (list 100 2 3 15 20)) [] => (101 3 4 16 21)
(101 3 4 16 21)
